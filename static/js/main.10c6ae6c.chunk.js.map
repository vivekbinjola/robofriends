{"version":3,"sources":["reportWebVitals.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/Errorboundary.js","containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","CardList","robots","Error","SearchBox","Searchfield","SearchChange","className","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","Errorboundary","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchfield","target","value","fetch","response","json","users","filteredRobots","filter","name","toLowerCase","includes","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uMAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,oCCqBCQ,EAxBI,SAAC,GAAa,EAAZC,OAEhB,MAAM,IAAIC,MAAM,aCaNC,EAjBG,SAAC,GAA+B,EAA9BC,YAA+B,IAAnBC,EAAkB,EAAlBA,aAE5B,OACI,qBAAKC,UAAU,MAAf,SACI,uBACAA,UAAU,sCACNC,KAAK,SACLC,YAAY,gBACfC,SAAWJ,OCKRK,EAbF,SAACC,GAEV,OACI,qBAAKC,MAAO,CAACC,UAAU,SAAWC,OAAO,kBACxCC,OAAO,SADR,SAGJJ,EAAMK,YCoBIC,G,wDAvBX,WAAYN,GAAO,IAAD,8BAClB,cAAMA,IACDO,MAAM,CAEPC,UAAU,GAJI,E,8DASJC,EAAMC,GAExBC,KAAKC,SAAS,CAACJ,UAAS,M,+BAKpB,OAAGG,KAAKJ,MAAMC,SACH,4DAEJG,KAAKX,MAAMK,a,GArBOQ,cCyDdC,E,kDAlDX,aAAe,IAAD,8BACV,gBAUJC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CAAEK,YAAaD,EAAME,OAAOC,SAV1C,EAAKZ,MAAQ,CAETjB,OAAQ,GACR2B,YAAa,IALP,E,gEAeO,IAAD,OACnBG,MAAM,8CACLrC,MAAK,SAAAsC,GAAQ,OAAIA,EAASC,UAC1BvC,MAAK,SAAAwC,GAAQ,EAAKX,SAAS,CAACtB,OAAOiC,S,+BAI3B,IAAD,OACCC,EAAiBb,KAAKJ,MAAMjB,OAAOmC,QAAO,SAAAnC,GAC5C,OAAOA,EAAOoC,KAAKC,cAAcC,SAAS,EAAKrB,MAAMU,YAAYU,kBAGrE,OAAgC,IAA7BhB,KAAKJ,MAAMjB,OAAOuC,OAEX,2CAIF,sBAAKlC,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWD,aAAciB,KAAKI,iBAC9B,cAAC,EAAD,UACA,cAAC,EAAD,UACD,cAAE,EAAF,CAAWzB,OAAQkC,e,GAvCpBX,aCDlBiB,IAASC,OACP,cAAC,IAAMC,WAAP,UACD,cAAC,EAAD,MAECC,SAASC,eAAe,SAM1BtD,M","file":"static/js/main.10c6ae6c.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport Card from './Card';\r\n\r\n\r\n  const CardList = ({robots}) => {\r\n if(true){\r\n     throw new Error('Noooooo!');\r\n    }\r\n \r\n    return (\r\n        <div>\r\n            {\r\n        robots.map((user, i) => {\r\n\r\n        return (\r\n            <Card\r\n                key={i}\r\n                id={robots[i].id}\r\n                name={robots[i].name}\r\n                email={robots[i].email}\r\n            />\r\n        );\r\n    })\r\n}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList;\r\n\r\n","import React from 'react';\r\n\r\nconst SearchBox = ({Searchfield,SearchChange}) => {\r\n\r\n    return (\r\n        <div className='pa2'>\r\n            <input\r\n            className=' pa2 bd3 b--green tc bg-light-green'\r\n                type=\"search\"\r\n                placeholder=\"Search Robots\"\r\n             onChange= {SearchChange}\r\n            />\r\n\r\n        </div>\r\n\r\n    );\r\n\r\n}\r\n\r\nexport default SearchBox;\r\n\r\n"," import React from 'react';\r\n\r\n const Scroll=(props)=>{\r\n    \r\n     return(\r\n         <div style={{overflowY:'scroll' , border:'4px solid black',\r\n          height:'500px'}}>\r\n\r\n    {props.children}\r\n\r\n        </div>\r\n     );\r\n    \r\n };\r\n\r\n export default Scroll;"," \r\nimport React, { Component } from 'react';\r\n\r\n class Errorboundary extends Component{\r\n\r\n    constructor(props){\r\n    super(props);\r\n    this.state={\r\n\r\n        hasError: false\r\n    }\r\n}\r\n\r\n\r\ncomponentDidCatch(error,info){\r\n \r\nthis.setState({hasError:true})\r\n    \r\n}\r\n\r\nrender(){\r\n    if(this.state.hasError){\r\n        return <h1>oops!Somethind is Missing.</h1>\r\n    }\r\n    return this.props.children;\r\n\r\n}\r\n}\r\nexport default Errorboundary;","import React, { Component } from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll'\r\nimport './App.css'\r\nimport Errorboundary from '../components/Errorboundary';\r\n \r\n\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n\r\n            robots: [],\r\n            searchfield: ''\r\n        }\r\n\r\n    }\r\n\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({ searchfield: event.target.value })\r\n    }\r\n\r\n    componentDidMount() {\r\n     fetch('https://jsonplaceholder.typicode.com/users')\r\n     .then(response => response.json())\r\n     .then(users=>{this.setState({robots:users})});\r\n    }\r\n\r\n\r\n    render() {\r\n        const filteredRobots = this.state.robots.filter(robots => {\r\n            return robots.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\r\n        })\r\n\r\n        if(this.state.robots.length === 0)\r\n        {\r\n           return <h1>Loading..</h1>\r\n        }\r\n        else {\r\n            return (\r\n                <div className='tc'>\r\n                    <h1 className='f1'>RoboFriends</h1>\r\n                    <SearchBox SearchChange={this.onSearchChange} />\r\n                    <Scroll>\r\n                    <Errorboundary>\r\n                   < CardList robots={filteredRobots} />\r\n                   </Errorboundary>\r\n                   </Scroll> \r\n                </div>\r\n            );\r\n        }\r\n\r\n      \r\n    }\r\n}\r\n\r\n\r\nexport default App; ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\nimport App from './containers/App';\n\n \nReactDOM.render(\n  <React.StrictMode>\n <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n "],"sourceRoot":""}